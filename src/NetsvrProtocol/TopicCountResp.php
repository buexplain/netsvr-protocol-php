<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: topicCountResp.proto

namespace NetsvrProtocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *worker响应business，返回网关中的主题数量
 *
 * Generated from protobuf message <code>netsvr.topicCountResp.TopicCountResp</code>
 */
class TopicCountResp extends \Google\Protobuf\Internal\Message
{
    /**
     *网关包含的主题数量
     *注意，如果你有多个网关机器，网关之间的主题数量是无法去重后统计的，这个统计只能是当前网关主题去重后的数量
     *
     * Generated from protobuf field <code>int32 count = 1;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $count
     *          网关包含的主题数量
     *          注意，如果你有多个网关机器，网关之间的主题数量是无法去重后统计的，这个统计只能是当前网关主题去重后的数量
     * }
     */
    public function __construct($data = NULL) {
        \NetsvrProtocol\GPBMetadata\TopicCountResp::initOnce();
        parent::__construct($data);
    }

    /**
     *网关包含的主题数量
     *注意，如果你有多个网关机器，网关之间的主题数量是无法去重后统计的，这个统计只能是当前网关主题去重后的数量
     *
     * Generated from protobuf field <code>int32 count = 1;</code>
     * @return int
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     *网关包含的主题数量
     *注意，如果你有多个网关机器，网关之间的主题数量是无法去重后统计的，这个统计只能是当前网关主题去重后的数量
     *
     * Generated from protobuf field <code>int32 count = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->count = $var;

        return $this;
    }

}

